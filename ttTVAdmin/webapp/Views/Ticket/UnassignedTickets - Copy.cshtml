<div id="content">
    <!-- row -->
    <div class="row">
        <!-- col -->
        <div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
            <h1 class="page-title txt-color-blueDark">
                <!-- PAGE HEADER -->
                <i class="fa-fw fa fa-file-text-o"></i>
                Task Management
                <span>
                    >
                    Unassigned Tasks
                </span>
            </h1>
        </div>
        <!-- end col -->
        <!-- right side of the page with the sparkline graphs -->
        <!-- col -->
        <div class="col-xs-12 col-sm-5 col-md-5 col-lg-8">
            <!-- sparks -->
            <ul id="sparks">
                <li class="sparks-info">
                    <h5> Call Log Avg<span class="txt-color-blue"> 11.5 min.</span></h5>
                    <div class="sparkline txt-color-blue hidden-mobile hidden-md hidden-sm">
                        1300, 1877, 2500, 2577, 2000, 2100, 3000, 2700, 3631, 2471, 2700, 3631, 2471
                    </div>
                </li>
                <li class="sparks-info">
                    <h5> Assigning Avg <span class="txt-color-purple"><i class="fa fa-arrow-circle-up" data-rel="bootstrap-tooltip" title="Increased"></i>&nbsp; 203 min</span></h5>
                    <div class="sparkline txt-color-purple hidden-mobile hidden-md hidden-sm">
                        110,150,300,130,400,240,220,310,220,300, 270, 210
                    </div>
                </li>
                <li class="sparks-info">
                    <h5> Resolving Avg <span class="txt-color-greenDark"><i class="fa fa-arrow-circle-down"></i>&nbsp; 8.8 days</span></h5>
                    <div class="sparkline txt-color-greenDark hidden-mobile hidden-md hidden-sm">
                        110,150,300,130,400,240,220,310,220,300, 270, 210
                    </div>
                </li>
            </ul>
            <!-- end sparks -->
        </div>
        <!-- end col -->
    </div>
    <!-- end row -->
    <!--
        The ID "widget-grid" will start to initialize all widgets below
        You do not need to use widgets if you dont want to. Simply remove
        the <section></section> and you can use wells or panels instead
        -->
    <!-- widget grid -->
    <section id="widget-grid" class="">
        <!-- row -->
        <div class="row">
            <!-- NEW WIDGET START -->
            <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                @*<div class="alert alert-info">
                        <strong>NOTE:</strong> All the data is loaded from a seperate JSON file
                    </div>*@
                <!-- Widget ID (each widget will need unique ID)-->
                <div class="jarviswidget jarviswidget-color-darken" id="wid-id-0" data-widget-editbutton="false">
                    <!-- widget options:
                    usage: <div class="jarviswidget" id="wid-id-0" data-widget-editbutton="false">

                    data-widget-colorbutton="false"
                    data-widget-editbutton="false"
                    data-widget-togglebutton="false"
                    data-widget-deletebutton="false"
                    data-widget-fullscreenbutton="false"
                    data-widget-custombutton="false"
                    data-widget-collapsed="true"
                    data-widget-sortable="false"

                    -->
                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2>Unassigned Tasks </h2>
                    </header>
                    <!-- widget div-->
                    <div>
                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->
                            <input class="form-control" type="text">
                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body no-padding">
                            <table id="tickets" class="display projects-table table table-striped table-bordered table-hover" cellspacing="0" width="100%">
                                <thead>
                                    <tr>
                                        <th style="width:5%"></th>
                                        <th class="hasinput" style="width:5%">
                                            <input type="text" class="form-control" placeholder="Filter ID" />
                                        </th>
                                        <th class="hasinput" style="width:10%">
                                            <input type="text" class="form-control" placeholder="Filter Type" />
                                        </th>
                                        <th class="hasinput" style="width:20%">
                                            <input type="text" class="form-control" placeholder="Filter Task" />
                                        </th>
                                        <th class="hasinput" style="width:10%">
                                            <input type="text" class="form-control" placeholder="Filter Assigned" />
                                        </th>
                                        <th class="hasinput" style="width:5%">
                                            <input type="text" class="form-control" placeholder="Filter Status" />
                                        </th>
                                        <th class="hasinput" style="width:10%">
                                            <input type="text" class="form-control" placeholder="Filter Category" />
                                        </th>
                                        <th class="hasinput" style="width:5%">
                                            <input type="text" class="form-control" placeholder="Filter Priority" />
                                        </th>
                                        <th class="hasinput" style="width:5%">
                                            <input type="text" class="form-control" placeholder="Filter Progress" />
                                        </th>
                                        <th class="hasinput icon-addon addon-md">
                                            <input id="createddateselect_filter" type="text" placeholder="Filter Created" class="form-control datepicker" data-dateformat="yy-mm-dd" />
                                            <label for="createddateselect_filter" class="glyphicon glyphicon-calendar no-margin padding-top-15" rel="tooltip" title="" data-original-title="Filter Created"></label>
                                        </th>
                                        <th class="hasinput" style="width:9%">
                                            <input type="text" class="form-control" placeholder="Filter Owner" />
                                        </th>
                                        <th class="hasinput icon-addon addon-md">
                                            <input id="updateddateselect_filter" type="text" placeholder="Filter Updated" class="form-control datepicker" data-dateformat="yyyy-mm-dd" />
                                            <label for="updateddateselect_filter" class="glyphicon glyphicon-calendar no-margin padding-top-15" rel="tooltip" title="" data-original-title="Filter Updated"></label>
                                        </th>
                                    </tr>
                                    <tr>
                                        <th></th>
                                        <th data-hide="phone,tablet">ID</th>
                                        <th data-hide="phone">Type</th>
                                        <th data-class="expand">Task</th>
                                        <th data-hide="phone"><i class="fa fa-fw fa-user text-muted hidden-md hidden-sm hidden-xs"></i> Assigned</th>
                                        <th data-hide="phone">Status</th>
                                        <th data-hide="phone">Category</th>
                                        <th>Priority</th>
                                        <th data-hide="phone,tablet">Progress</th>
                                        <th data-hide="phone,tablet"><i class="fa fa-fw fa-calendar text-muted hidden-md hidden-sm hidden-xs"></i> Created</th>
                                        <th data-hide="phone,tablet"><i class="fa fa-fw fa-user text-muted hidden-md hidden-sm hidden-xs"></i> Owner</th>
                                        <th data-hide="phone,tablet"><i class="fa fa-fw fa-calendar text-muted hidden-md hidden-sm hidden-xs"></i> Updated</th>
                                    </tr>
                                </thead>
                            </table>
                        </div>
                        <!-- end widget content -->
                    </div>
                    <!-- end widget div -->
                </div>
                <!-- end widget -->
            </article>
            <!-- WIDGET END -->
        </div>
        <!-- end row -->
        <!-- row -->
        <div class="row">
            <!-- a blank row to get started -->
            <div class="col-sm-12">
                <!-- your contents here -->
            </div>
        </div>
        <!-- end row -->
    </section>
    <!-- end widget grid -->
    <!-- Modal -->
    <div class="modal fade" id="updateFieldModal" tabindex="-1" role="dialog" aria-labelledby="updateFieldModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                        &times;
                    </button>
                    <h4 class="modal-title" id="updateFieldModalLabel">Article Post</h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <input id="modalTextInput" type="text" class="form-control" placeholder="Title" required />
                            </div>
                            <div class="form-group">
                                <textarea id="modalCommentInput" class="form-control" placeholder="Comments (Optional)" rows="5" required></textarea>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">
                        Cancel
                    </button>
                    <button type="button" class="btn btn-primary" id="submitChange">
                        Update
                    </button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->

</div>
@section pagespecific {

    <script src="/scripts/plugin/dropzone/dropzone.min.js"></script>
    <script src="/scripts/plugin/superbox/superbox.min.js"></script>

    <script type="text/javascript">
        var currentUser = '@User.Identity.Name';

        $(document).ready(function () {
            var breakpointDefinition = {
                tablet: 1024,
                phone: 480
            };

            /* Formatting function for row details - modify as you need */
            function format(d) {
                // `d` is the original data object for the row
                return '<div class="well">' +
                    '<div class="row">' +
                        '<div class="col-md-1">' +
                            '<strong>Details</strong>' +
                        '</div>' +
                        '<div class="col-md-8">' +
                            formatModalButton(d.TicketId, 'Details', d.Details) +
                            d.Details +
                        '</div>' +
                        '<div class="col-md-3 text-right">' +
                            '<button class="btn btn-success" type="submit" id="submitResolve' + d.TicketId + '">Resolve</button> ' +
                            '<button class="btn btn-default" type="submit" id="submitClose' + d.TicketId + '">Close</button> ' +
                            '<button class="btn btn-danger" type="submit" id="submitReOpen' + d.TicketId + '">Re-open</button> ' +
                            '<button class="btn btn-primary" type="submit" id="submitTakeOver' + d.TicketId + '">Take Over</button> ' +
                            '<button class="btn btn-primary" type="submit" id="submitAssign' + d.TicketId + '">Assign</button> ' +
                            '<button class="btn btn-primary" type="submit" id="submitReassign' + d.TicketId + '">Re-assign</button> ' +
                            '<button class="btn btn-warning" type="submit" id="submitMoreInfo' + d.TicketId + '">Request More Info</button> ' +
                            '<button class="btn btn-success" type="submit" id="submitCancelMoreInfo' + d.TicketId + '">Cancel More Info</button> ' +
                            '<button class="btn btn-danger" type="submit" id="submitGiveUp' + d.TicketId + '">Give Up</button> ' +
                            '<button class="btn btn-danger" type="submit" id="submitForceClose' + d.TicketId + '">Force Close</button> ' +
                        '</div>' +
                    '</div><div class="row">' +
                        '<div class="col-md-1">' +
                            '<strong>Tags</strong>' +
                        '</div>' +
                        '<div class="col-md-3">' +
                            d.TagList +
                        '</div>' +
                        '<div class="col-md-1">' +
                            '<strong>Affect Customer</strong>' +
                        '</div>' +
                        '<div class="col-md-7">' +
                            d.AffectsCustomer +
                        '</div>' +
                    '</div><div class="row">' +
                        '<div class="col-md-1">' +
                            '<strong>Created by</strong>' +
                        '</div>' +
                        '<div class="col-md-3">' +
                            d.CreatedBy + ' on ' + d.CreatedDate +
                        '</div>' +
                        '<div class="col-md-1">' +
                            '<strong>Current status set by</strong>' +
                        '</div>' +
                        '<div class="col-md-3">' +
                            d.CurrentStatusSetBy + ' on ' + d.CurrentStatusDate +
                        '</div>' +
                        '<div class="col-md-1">' +
                            '<strong>Last updated by</strong>' +
                        '</div>' +
                        '<div class="col-md-3">' +
                            d.LastUpdateBy + ' on ' + d.LastUpdateDate +
                        '</div>' +
                    '</div><div class="row">' +
                        '<div class="col-md-8">' +
                            '<hr class="simple" /><h3>Activity Log</h3>' +
                            '<div id="comments' + d.TicketId + '" />' +
                        '</div>' +
                        '<div class="col-md-4">' +
                            '<hr class="simple" />' +
                            '<form class="smart-form"><header>Add Comments</header>' +
                            '<fieldset><section><label class="textarea"><textarea id="commentText' + d.TicketId + '" rows="3" class="custom-scroll"></textarea></label></section></fieldset>"' +
                            '<footer><button class="btn btn-primary" type="submit" id="submitComment' + d.TicketId + '">Add</button></div></footer></form>' +
                        '</div>' +
                        '<div class="col-md-8">' +
                            '<div class="row">' +
                                '<div class="col-md-12">' +
                                    '<hr class="simple" /><h3>Images</h3>' +
                                    '<div id="images' + d.TicketId + '" />' +
                                '</div>' +
                                '<div class="col-md-12">' +
                                    '<div id="files' + d.TicketId + '" />' +
                                '</div>' +
                            '</div>' +
                        '</div>' +
                        '<div class="col-md-4">' +
                            '<hr class="simple" /><h3>Add Attachment</h3>' +
                            '<form action="/" class="dropzone smart-form" id="ticketDropzone' + d.TicketId + '" enctype="multipart/form-data" method="post">' +
                            '<input type="hidden" name="ticketID" value="' + d.TicketId + '" height="200px" />' +
                            '<footer><button class="btn btn-primary" type="submit" id="submitUpload' + d.TicketId + '">Upload</button></div></footer></form>' +
                        '</div>' +
                    '</div></div>';


                //'<table cellpadding="5" cellspacing="0" border="0" class="table table-hover table-condensed">' +
                //    '<tr>' +
                //    '<td style="width:150px">Details:</td>' +
                //    '<td>' + d.Details + ' ' + formatModalButton(d.TicketId, 'Details', d.Details) + '</td>' +
                //    '</tr>' +
                //    '<tr>' +
                //    '<td>Affect Customer(s):</td>' +
                //    '<td>' + d.AffectsCustomer + '</td>' +
                //    '</tr>' +
                //    '<tr>' +
                //    '<td>Tag:</td>' +
                //    '<td>' + d.TagList + '</td>' +
                //    '</tr>' +
                //    '<tr>' +
                //    '<td>Created By:</td>' +
                //    '<td>' + d.CreatedBy + ' on ' + d.CreatedDate + '</td>' +
                //    '</tr>' +
                //    '<tr>' +
                //    '<td>Status Set By:</td>' +
                //    '<td>' + d.CurrentStatusSetBy + ' on ' + d.CurrentStatusDate + '</td>' +
                //    '</tr>' +
                //    '<tr>' +
                //    '<td>Last Updated By:</td>' +
                //    '<td>' + d.LastUpdateBy + ' on ' + d.LastUpdateDate + '</td>' +
                //    '</tr>' +
                //    '</table>';
            }

            function formatModalButton(tid, field, ovalue) {
                //return '<a href="javascript:void(0)" title="Update" data-toggle="modal" data-target="#updateFieldModal" data-field="' + field + '" data-ovalue="' + ovalue + '"> <i class="fa fa-edit"></i> </a>';
                //return '<button type="button" title="Update" data-toggle="modal" data-target="#updateFieldModal" data-tid="' + tid + '" data-field="' + field + '" data-ovalue="' + ovalue + '"> <i class="fa fa-edit"></i> </button>';
                var encodedValue;
                if (ovalue == null)
                    encodedValue = '';
                else
                    encodedValue = ovalue.replace(/"/g, '""');

                return '<a href="javascript:void(0)" title="Update" data-toggle="modal" data-target="#updateFieldModal" ' +
                    'data-tid="' + tid + '" ' +
                    'data-field="' + field + '" ' +
                    'data-ovalue="' + encodedValue + '" ' +
                    '> <i class="fa fa-edit"></i> </a>';
            }
            // <a href="javascript:void(0)" title="Update" class="testModalLink"> <i class="fa fa-edit"></i> </a>

            // clears the variable if left blank
            var responsiveHelper_tickets = undefined;
            var table = $('#tickets').DataTable({
                "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-6 hidden-xs'l C T>r>" +
                    "t" +
                    "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                "oTableTools": {
                    "aButtons": [
                    "copy",
                    "csv",
                    "xls",
                       {
                           "sExtends": "pdf",
                           "sTitle": "ttTVAdmin_PDF",
                           "sPdfMessage": "ttTVAdmin PDF Export",
                           "sPdfSize": "letter"
                       },
                       {
                           "sExtends": "print",
                           "sMessage": "Generated by ttTVAdmin <i>(press Esc to close)</i>"
                       }
                    ],
                    "sSwfPath": "/Scripts/plugin/datatables/swf/copy_csv_xls_pdf.swf"
                },
                "autoWidth": true,
                "ajax": "/Ticket/GetUnassigned",
                "bDestroy": true,
                "iDisplayLength": 10,
                "columns": [
                    {
                        "class": 'details-control',
                        "orderable": false,
                        "data": null,
                        "defaultContent": ''
                    },
                    { "data": "TicketId" },
                    { "data": "Type" },
                    { "data": "Title" },
                    { "data": "AssignedTo" },
                    { "data": "CurrentStatus" },
                    { "data": "Category" },
                    { "data": "Priority" },
                    { "data": "Progress" },
                    { "data": "CreatedDate" },
                    { "data": "Owner" },
                    { "data": "LastUpdateDate" }
                ],
                "order": [[1, 'asc']],
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_tickets) {
                        responsiveHelper_tickets = new ResponsiveDatatablesHelper($('#tickets'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    responsiveHelper_tickets.createExpandIcon(nRow);
                },
                "drawCallback": function (oSettings) {
                    responsiveHelper_tickets.respond();
                },
                "fnDrawCallback": function (oSettings) {
                    runAllCharts();
                }
            });

            // Apply the filter
            $("#tickets thead th input[type=text]").on('keyup change', function () {
                table
                    .column($(this).parent().index() + ':visible')
                    .search(this.value)
                    .draw();
            });

            // Add event listener for opening and closing details
            $('#tickets tbody').on('click', 'td.details-control', function () {
                var tr = $(this).closest('tr');
                var row = table.row(tr);
                var data = row.data();

                if (row.child.isShown()) {
                    // This row is already open - close it
                    row.child.hide();
                    tr.removeClass('shown');
                } else {
                    // Open this row
                    row.child(format(data)).show();
                    tr.addClass('shown');
                    renderWorkflow(data);
                    listFiles(data.TicketId);
                    listComments(data.TicketId);
                    setupDropZone(data.TicketId);
                }
            });

            //$(document).on('click', 'a.testModalLink', function () {
            //    alert('click');
            //    // $('#updateFieldModal').show();
            //    $('#updateFieldModal').modal('show');
            //});

            $('#updateFieldModal').on('shown.bs.modal', function (event) {
                //alert('modal');
                var a = $(event.relatedTarget);
                var id = a.data('tid');
                var field = a.data('field');
                var value = a.data('ovalue');
                //alert(field + ':' + value);
                var modal = $(this);
                modal.data('tid', id);
                modal.data('field', field);
                modal.data('ovalue', value);

                modal.find('.modal-title').text(field);
                var textinpput = modal.find('#modalTextInput');
                textinpput.attr('placeholder', field);
                textinpput.val(value);

                //textinpput.val(value);
                textinpput.focus(function () { $(this).select(); });
                textinpput.focus();
            });

            function setupDropZone(id) {
                $('#ticketDropzone' + id).dropzone({
                    url: '@Url.Action("AttachmentUpload", "Ticket")',
                    addRemoveLinks: true,
                    maxFilesize: 0.5,
                    autoProcessQueue: false,
                    uploadMultiple: true,
                    dictDefaultMessage: '<span class="text-center"><span class="font-lg visible-xs-block visible-sm-block visible-lg-block"><span class="font-lg"><i class="fa fa-caret-right text-danger"></i> Drop files <span class="font-xs">to upload</span></span><span>&nbsp&nbsp<h4 class="display-inline"> (Or Click)</h4></span>',
                    dictResponseError: 'Error uploading file!',
                    init: function () {
                        var submitButton = document.querySelector('#submitUpload' + id);
                        var dropzone = this;

                        submitButton.addEventListener('click', function () {
                            dropzone.processQueue();
                        });

                        this.on("addedfile", function () {
                            $('#submitUpload' + id).removeAttr("disabled");
                        })

                        this.on("complete", function (data) {
                            if (this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) {
                                var res = eval('(' + data.xhr.responseText + ')');
                                var msg;
                                if (res.Result) {
                                    $.smallBox({
                                        title: "Attachment Updated",
                                        content: "<i class='fa fa-clock-o'></i> <i>" + res.Count + " files have been uploaded.</i>",
                                        color: "#659265",
                                        iconSmall: "fa fa-check fa-2x fadeInRight animated",
                                        timeout: 10000
                                    });
                                    listFiles(id);
                                }
                                else {
                                    $.smallBox({
                                        title: "Error uploading attachment",
                                        content: "<i class='fa fa-times'></i> <i>" + res.Message + "</i>",
                                        color: "#C46A69",
                                        iconSmall: "fa fa-times fa-2x fadeInRight animated",
                                        //timeout: 10000
                                    });
                                }
                            }
                        });

                        this.on("removedfile", function () {
                            if (this.getAcceptedFiles().length === 0) {
                                $('#submitUpload' + id).attr("disabled", true);
                            }
                        });

                    }
                });
            }

            function listFiles(id) {
                var imagediv = $('#images' + id);
                var filediv = $('#files' + id);

                $.post("/Ticket/GetAttachments", { "id": id }, function (files) {
                    var imageshtml = '<div class="superbox' + id + ' col-sm-12">';
                    $.each(files, function (i, file) {
                        var src;
                        if (file.FileType == 'image/jpeg' || file.FileType == 'image/png') {
                            src = '/Ticket/GetAttachment?size=1&id=' + file.FileId;
                        //} else if (file.FileType.indexOf('compressed') > 0) {
                        //    src = '/Content/img/files/zip.png';
                        //} else if (file.FileName.indexOf('.xls') > 0) {
                        //    src = '/Content/img/files/xls.png';
                        //} else if (file.FileName.indexOf('.doc') > 0) {
                        //    src = '/Content/img/files/doc.png';
                        //} else if (file.FileName.indexOf('.ppt') > 0) {
                        //    src = '/Content/img/files/ppt.png';
                        //} else if (file.FileName.indexOf('.xls') > 0) {
                        //    src = '/Content/img/files/ppt.png';
                        //} else if (file.FileName.indexOf('.avi') > 0) {
                        //    src = '/Content/img/files/avi.png';
                        //} else if (file.FileName.indexOf('.dwg') > 0) {
                        //    src = '/Content/img/files/dwg.png';
                        //} else if (file.FileName.indexOf('.m4a') > 0) {
                        //    src = '/Content/img/files/m4a.png';
                        //} else if (file.FileName.indexOf('.m4v') > 0) {
                        //    src = '/Content/img/files/m4v.png';
                        //} else if (file.FileName.indexOf('.mp3') > 0) {
                        //    src = '/Content/img/files/mp3.png';
                        //} else if (file.FileName.indexOf('.mp4v') > 0) {
                        //    src = '/Content/img/files/mp4v.png';
                        //} else if (file.FileName.indexOf('.mpeg') > 0) {
                        //    src = '/Content/img/files/mpeg.png';
                        //} else if (file.FileName.indexOf('.wav') > 0) {
                        //    src = '/Content/img/files/wav.png';
                        //} else if (file.FileName.indexOf('.wma') > 0) {
                        //    src = '/Content/img/files/wma.png';
                        //} else if (file.FileName.indexOf('.wmv') > 0) {
                        //    src = '/Content/img/files/wmv.png';
                        //} else if (file.FileType.indexOf('image') > 0) {
                        //    src = '/Content/img/files/img.png';
                        //} else if (file.FileType.indexOf('video') > 0) {
                        //    src = '/Content/img/files/video.png';
                        //} else {
                        //    src = '/Content/img/files/file.png';
                            imageshtml += '<div class="superbox-list">' +
                                '<img src="' + src + '" data-img="/Ticket/GetAttachment?id=' + file.FileId + '" title="Uploaded by ' + file.UploadedBy + ' on ' + file.UploadedDate + '" class="superbox-img" />' +
                                '</div>';
                        }

                        //imageshtml += '<div class="superbox-list">' +
                        //    '<img src="' + src + '" data-img="/Ticket/GetAttachment?id=' + file.FileId + '" alt="Uploaded by ' + file.UploadedBy + ' on ' + file.UploadedDate + '" title="' + file.FileName + '" class="superbox-img" />' +
                        //    '</div>';
                    })
                    //imageshtml += '<div class="superbox-show" style="height:300px; display: none"></div>';
                    imageshtml += '</div>';
                    imagediv.html(imageshtml);
                    $('.superbox' + id).SuperBox();
                });

            };

            function listComments(id) {
                var commentdiv = $('#comments' + id);

                $.post("/Ticket/GetComments", { "id": id }, function (comments) {
                    var html = '<table id="commentTable' + id + '" class="table table-bordered table-striped table-hover" width="100%"><thead><tr><th>Time</th><th>Event</th></tr></thead><tbody>';
                    $.each(comments, function (i, comment) {
                        html += '<tr>' +
                            '<td>' + comment.CommentedDate + '</td>' +
                            '<td>' + comment.CommentedBy + ' ' + comment.CommentEvent;
                        if (comment.Comment != null && comment.Comment.length > 0)
                            html += ' "' + comment.Comment + '"';
                        html += '</td></tr>';
                    })
                    html += '</tbody></table>';
                    //images += '<div class="superbox-show" style="height:300px; display: none"></div>';
                    commentdiv.html(html);
                    var responsiveHelper_comment = undefined;
                    var breakpointDefinition = {
                        tablet: 1024,
                        phone: 480
                    };

                    $('#commentTable' + id).DataTable({
                        "sDom": "<'dt-toolbar'<'col-xs-12 col-sm-6'f><'col-sm-6 col-xs-12 hidden-xs'l>r>" +
                            "t" +
                            "<'dt-toolbar-footer'<'col-sm-6 col-xs-12 hidden-xs'i><'col-xs-12 col-sm-6'p>>",
                        "autoWidth": true,
                        "order": [[0, 'desc']],
                        "iDisplayLength": 5,
                        "preDrawCallback": function () {
                            // Initialize the responsive datatables helper once.
                            if (!responsiveHelper_comment) {
                                responsiveHelper_comment = new ResponsiveDatatablesHelper($('#commentTable' + id), breakpointDefinition);
                            }
                        },
                        "rowCallback": function (nRow) {
                            responsiveHelper_comment.createExpandIcon(nRow);
                        },
                        "drawCallback": function (oSettings) {
                            responsiveHelper_comment.respond();
                        }
                    });

                    $('#submitComment' + id).on('click', function () {
                        var input = $('#commentText' + id);
                        var button = $('#submitComment' + id);

                        button.attr('disabled', true);

                        $.post("/Ticket/AddComment", { "id": id, "comment": input.val() }, function (result) {
                            if (!result == null && result.length > 0) {
                                // Error
                                $.smallBox({
                                    title: "Error Adding Comment",
                                    content: "<i class='fa fa-times'></i> <i>" + result + "</i>",
                                    color: "#C46A69",
                                    iconSmall: "fa fa-times fa-2x fadeInRight animated",
                                    //timeout: 10000
                                });
                            } else {
                                listComments(id);
                                input.val('');
                                $.smallBox({
                                    title: "Cooment Added",
                                    content: "<i class='fa fa-clock-o'></i> <i>Your comment has been added.</i>",
                                    color: "#659265",
                                    iconSmall: "fa fa-check fa-2x fadeInRight animated",
                                    timeout: 10000
                                });
                            }

                            button.attr('disabled', false);
                        });
                    });


                });
            };

            $('#submitChange').on('click', function () {
                var modal = $('#updateFieldModal');
                var submitChangeButton = modal.find('#submitChange');

                // disable button to avoid multiple submission
                submitChangeButton.attr('disabled', true);

                var id = modal.data('tid');
                var field = modal.data('field');
                var ovalue = modal.data('ovalue');
                var modalTextInput = modal.find('#modalTextInput');
                var modalCommentInput = modal.find('#modalCommentInput');

                // alert("id " + id + "; field " + field + "; ovalue " + ovalue + "; value " + modalTextInput.val() + "; comment " + modalCommentInput.val());

                $.post("/Ticket/UpdateField", { "id": id, "field": field, "ovalue": ovalue, "value": modalTextInput.val(), "comment": modalCommentInput.val() }, function (result) {
                    if (!result == null && result.length > 0) {
                        // Error
                        $.smallBox({
                            title: "Error updating " + field,
                            content: "<i class='fa fa-times'></i> <i>" + result + "</i>",
                            color: "#C46A69",
                            iconSmall: "fa fa-times fa-2x fadeInRight animated",
                            //timeout: 10000
                        });
                    } else {
                        table.ajax.reload();
                        modal.modal('hide');
                        $.smallBox({
                            title: field + " Updated",
                            content: "<i class='fa fa-clock-o'></i> <i>Your changes have been updated.</i>",
                            color: "#659265",
                            iconSmall: "fa fa-check fa-2x fadeInRight animated",
                            timeout: 10000
                        });
                    }

                    submitChangeButton.attr('disabled', false);
                });

            });

            function renderWorkflow(data) {
                var id = data.TicketId;
                var submitResolve = $('#submitResolve' + id);
                var submitClose = $('#submitClose' + id);
                var submitReOpen = $('#submitReOpen' + id);
                var submitTakeOver = $('#submitTakeOver' + id);
                var submitAssign = $('#submitAssign' + id);
                var submitReassign = $('#submitReassign' + id);
                var submitMoreInfo = $('#submitMoreInfo' + id);
                var submitCancelMoreInfo = $('#submitCancelMoreInfo' + id);
                var submitGiveUp = $('#submitGiveUp' + id);
                var submitForceClose = $('#submitForceClose' + id);

                // var unassigned = (TicketToDisplay.AssignedTo == null || TicketToDisplay.AssignedTo.length == 0);
                var hasAssignRight = data.HasAssignRight;
                var isAssigned = (data.AssignedTo != null && data.AssignedTo.lenght > 0);
                var notAssigned = !isAssigned;
                var isAssignedToMe = (isAssigned && data.AssignedTo == currentUser);
                var isOwnerMe = (data.Owner != null && data.Owner.lenght > 0 && data.Owner == currentUser);
                var isCreatorMe = (data.CreatedBy != null && data.CreatedBy.lenght > 0 && data.CreatedBy == currentUser);
                var notOwnerMe = !isOwnerMe;
                var isMoreInfo = (data.CurrentStatus == "More Info");
                var isActive = (data.CurrentStatus == "Active");
                var isClosed = (data.CurrentStatus == "Closed");
                var notClosed = !isClosed;
                var isResolved = (data.CurrentStatus == "Resolved");
                var notResolved = !isResolved;

                var showAssign = hasAssignRight && notClosed && notAssigned;
                var showReassign = hasAssignRight && notClosed && isAssigned;
                var showCancelMoreInfo = (isOwnerMe || isCreatorMe) && isMoreInfo;
                var showClose = isOwnerMe && isResolved;
                var showForceClose = notClosed && ((isOwnerMe && notResolved) || (notOwnerMe && isAssignedToMe));
                var showGiveUp = hasAssignRight && isAssignedToMe && notClosed;
                var showReOpen = isClosed || isResolved;
                var showMoreInfo = isAssignedToMe && isActive;
                var showResolve = notClosed && notResolved && isAssignedToMe;
                var showTakeOver = data.hasAssignRight && !isAssignedToMe && notClosed;

                if (showAssign) submitAssign.show(); else submitAssign.hide();
                if (showReassign) submitReassign.show(); else submitReassign.hide();
                if (showCancelMoreInfo) submitCancelMoreInfo.show(); else submitCancelMoreInfo.hide();
                if (showClose) submitClose.show(); else submitClose.hide();
                if (showForceClose) submitForceClose.show(); else submitForceClose.hide();
                if (showGiveUp) submitGiveUp.show(); else submitGiveUp.hide();
                if (showReOpen) submitReOpen.show(); else submitReOpen.hide();
                if (showMoreInfo) submitMoreInfo.show(); else submitMoreInfo.hide();
                if (showResolve) submitResolve.show(); else submitResolve.hide();
                if (showTakeOver) submitTakeOver.show(); else submitTakeOver.hide();
            };

        });

    </script>
}